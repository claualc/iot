[
    {
        "id": "0f533d672b77c4b5",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "1ac3b780667a44dd",
        "type": "mqtt-broker",
        "name": "",
        "broker": "broker.hivemq.com",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "polimi/challenge_2/2023/id_code_generator",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "26f66800710e48b9",
        "type": "mqtt in",
        "z": "0f533d672b77c4b5",
        "name": "",
        "topic": "polimi/challenge_2/2023/id_code_generator",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "1ac3b780667a44dd",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 170,
        "y": 180,
        "wires": [
            [
                "3af1b93b1bd4af10"
            ]
        ]
    },
    {
        "id": "3af1b93b1bd4af10",
        "type": "function",
        "z": "0f533d672b77c4b5",
        "name": "Get payload of N",
        "func": "const personCode = 1816;\nconst divisor = 7711;\nconst {id,timestamp} = msg.payload;\nconst n = (personCode+id)%divisor;\n\nconst store = global.get(\"allcsv\");\nlet payloadOfN = {};\n\nfor (let i = 0; i < store.length-1; i++) {\n    let payload = store[i][0]\n    if (payload.No == n) {\n        payloadOfN = store[i][0]\n        break;\n    }\n}\n\nreturn payloadOfN;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 180,
        "wires": [
            [
                "26e291dbed8b50d8"
            ]
        ]
    },
    {
        "id": "7429a991e9f48b1d",
        "type": "file in",
        "z": "0f533d672b77c4b5",
        "name": "Read Challenge csv",
        "filename": "\\Users\\ticto\\Documents\\Polimi\\IoT\\Lab\\Lab 2\\challenge2023_2.csv",
        "filenameType": "str",
        "format": "lines",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 380,
        "y": 380,
        "wires": [
            [
                "c09d431bfdd5e090"
            ]
        ]
    },
    {
        "id": "baec21e2a4a841bd",
        "type": "inject",
        "z": "0f533d672b77c4b5",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 380,
        "wires": [
            [
                "7429a991e9f48b1d"
            ]
        ]
    },
    {
        "id": "c09d431bfdd5e090",
        "type": "csv",
        "z": "0f533d672b77c4b5",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "none",
        "multi": "mult",
        "ret": "\\n",
        "temp": "No,Time,Source,Destination,Protocol,Length,SourcePort,DestinationPort,Info,Message",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 590,
        "y": 380,
        "wires": [
            [
                "4babc47d505fd373"
            ]
        ]
    },
    {
        "id": "4babc47d505fd373",
        "type": "function",
        "z": "0f533d672b77c4b5",
        "name": "Store",
        "func": "global.set(\"allcsv\",msg.payload);\nconsole.log(\"Global var initialized\")\nreturn global.get(\"allcsv\");",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "f2d18b95b188a966",
        "type": "debug",
        "z": "0f533d672b77c4b5",
        "name": "debug 3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1580,
        "y": 260,
        "wires": []
    },
    {
        "id": "26e291dbed8b50d8",
        "type": "switch",
        "z": "0f533d672b77c4b5",
        "name": "Check for multiple Publish",
        "property": "Info",
        "propertyType": "msg",
        "rules": [
            {
                "t": "regex",
                "v": "Publish.*Publish",
                "vt": "str",
                "case": false
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 810,
        "y": 180,
        "wires": [
            [
                "cebddd2fb8776bdd"
            ],
            []
        ]
    },
    {
        "id": "cebddd2fb8776bdd",
        "type": "function",
        "z": "0f533d672b77c4b5",
        "name": "Mount multiple payload",
        "func": "let infoArray = msg.Info.split(\",\");\nlet msgArray = msg.Message.split(\"},{\");\nlet finalMsg = msg;\nlet finalArray = [];\n\nconsole.log(\"infoArray \", infoArray)\nconsole.log(\"infoMsg \", msgArray)\n\nfor (let i = 0; i < infoArray.length - 1; i++) {\n    let infoAtr = infoArray[i][0]\n    let msgAtr = msgArray[i][0]\n\n    if (i == 0) {\n        msgAtr += \"}\"\n    } else if (i == infoArray.lengt-1) {\n        msgAtr = \"{\" + msgAtr\n    }\n    else {\n        msgAtr = \"{\" + msgAtr + \"}\"\n    }\n    finalMsg.Message = msgAtr\n    finalMsg.Info = infoAtr\n\n    finalArray = [...finalArray, finalMsg]\n\n}\n\nconsole.log(\"payload with multiple publish: \", finalArray)\nreturn finalArray;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1110,
        "y": 180,
        "wires": [
            [
                "b214fe1be665c39d"
            ]
        ]
    },
    {
        "id": "b214fe1be665c39d",
        "type": "debug",
        "z": "0f533d672b77c4b5",
        "name": "debug 4",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1580,
        "y": 180,
        "wires": []
    },
    {
        "id": "fb069466d6ee9eeb",
        "type": "function",
        "z": "0f533d672b77c4b5",
        "name": "Mount single payload",
        "func": "let payload = {\n    \"timestamp\": new Date(), \n    \"id\": msg.No, \n    \"payload\": msg}\nconsole.log(\"payload with not multiple publish: \", payload)\nreturn payload;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 260,
        "wires": [
            [
                "f2d18b95b188a966"
            ]
        ]
    },
    {
        "id": "bddf05c5e92e4ac7",
        "type": "batch",
        "z": "0f533d672b77c4b5",
        "name": "",
        "mode": "count",
        "count": 10,
        "overlap": 0,
        "interval": 10,
        "allowEmptySequence": false,
        "topics": [
            {
                "topic": ""
            }
        ],
        "x": 450,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "c450058deb406111",
        "type": "split",
        "z": "0f533d672b77c4b5",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 390,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "ccf64a813fdb877f",
        "type": "split",
        "z": "0f533d672b77c4b5",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 910,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "01badde0a48aa819",
        "type": "json",
        "z": "0f533d672b77c4b5",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1110,
        "y": 480,
        "wires": [
            []
        ]
    }
]